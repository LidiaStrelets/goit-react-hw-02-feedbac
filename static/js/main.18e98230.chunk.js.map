{"version":3,"sources":["components/FeedbackSection/FeedbackSection.module.css","components/Notification/Notification.module.css","components/Statistics/Statistics.module.css","components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/Notification/Notification.js","components/FeedbackSection/FeedbackSection.js","App.js","index.js","components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css"],"names":["module","exports","Statistics","good","neutral","bad","total","percentage","className","styles","stats","statItem","number","FeedbackOptions","increaseValue","options","btnWrapper","map","option","index","btn","type","onClick","prototype","PropTypes","func","isRequired","arrayOf","string","Section","title","children","section","defaultProps","node","Notification","message","text","FeedbackSection","countTotalFeedback","countPositiveFeedbackPercentage","subtitle","App","state","setState","prevState","toFixed","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.18e98230.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"subtitle\":\"FeedbackSection_subtitle__2B6n5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Notification_text__3WvWm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"stats\":\"Statistics_stats__3stUL\",\"statItem\":\"Statistics_statItem__2C8d9\",\"number\":\"Statistics_number__26tXS\"};","import React from 'react';\nimport styles from './Statistics.module.css';\n\nconst Statistics = ({ good, neutral, bad, total, percentage }) => (\n  <ul className={styles.stats}>\n    <li className={styles.statItem}>\n      <span>\n        Good: <span className={styles.number}>{good}</span>\n      </span>\n    </li>\n    <li className={styles.statItem}>\n      <span>\n        Neutral: <span className={styles.number}>{neutral}</span>\n      </span>\n    </li>\n    <li className={styles.statItem}>\n      <span>\n        Bad: <span className={styles.number}>{bad}</span>\n      </span>\n    </li>\n    <li className={styles.statItem}>\n      <span>\n        Total: <span className={styles.number}>{total()}</span>\n      </span>\n    </li>\n    <li className={styles.statItem}>\n      <span>\n        Positive feedback: <span className={styles.number}>{`${percentage()} %`}</span>\n      </span>\n    </li>\n  </ul>\n);\n\nexport default Statistics;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './FeedbackOptions.module.css';\n\nconst FeedbackOptions = ({ increaseValue, options }) => (\n  <div className={styles.btnWrapper}>\n    {options.map((option, index) => (\n      <button\n        key={index}\n        className={styles.btn}\n        type=\"button\"\n        onClick={() => increaseValue(option)}\n      >\n        {option}\n      </button>\n    ))}\n  </div>\n);\n\nFeedbackOptions.prototype = {\n  increaseValue: PropTypes.func.isRequired,\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default FeedbackOptions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Section.module.css';\n\nconst Section = ({ title, children }) => (\n  <section className={styles.section}>\n    <h1 className={styles.title}>{title}</h1>\n    {children}\n  </section>\n);\n\nSection.defaultProps = {\n  title: '',\n  children: [],\n};\n\nSection.prototype = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Notification.module.css';\n\nconst Notification = ({ message }) => <p className={styles.text}>{message}</p>;\n\nNotification.defaultProps = {\n  message: 'Oops, something went wrong here :(',\n};\n\nNotification.prototype = {\n  message: PropTypes.string,\n};\n\nexport default Notification;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './FeedbackSection.module.css';\n\nimport Statistics from '../Statistics';\nimport FeedbackOptions from '../FeedbackOptions';\nimport Section from '../Section';\nimport Notification from '../Notification';\n\nconst FeedbackSection = ({\n  increaseValue,\n  countTotalFeedback,\n  countPositiveFeedbackPercentage,\n  good,\n  neutral,\n  bad,\n}) => (\n  <Section title=\"Please, leave your feedback here:\">\n    <FeedbackOptions increaseValue={increaseValue} options={['good', 'neutral', 'bad']} />\n    <h2 className={styles.subtitle}>Statistics</h2>\n    {countTotalFeedback() === 0 ? (\n      <Notification message=\"No feedback given\"></Notification>\n    ) : (\n      <Statistics\n        good={good}\n        neutral={neutral}\n        bad={bad}\n        total={countTotalFeedback}\n        percentage={countPositiveFeedbackPercentage}\n      />\n    )}\n  </Section>\n);\n\nFeedbackSection.prototype = {\n  increaseValue: PropTypes.func.isRequired,\n  countTotalFeedback: PropTypes.func.isRequired,\n  countPositiveFeedbackPercentage: PropTypes.func.isRequired,\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n};\n\nexport default FeedbackSection;\n","// import './App.css';\nimport React, { Component } from 'react';\nimport FeedbackSection from './components/FeedbackSection';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  increaseValue = type => {\n    this.setState(prevState => ({\n      [type]: prevState[type] + 1,\n    }));\n  };\n\n  countTotalFeedback = () => {\n    const { good } = this.state;\n    const { neutral } = this.state;\n    const { bad } = this.state;\n    return good + neutral + bad;\n  };\n  countPositiveFeedbackPercentage = () =>\n    ((this.state.good / this.countTotalFeedback()) * 100).toFixed(2);\n\n  render() {\n    const { good } = this.state;\n    const { neutral } = this.state;\n    const { bad } = this.state;\n    return (\n      <div className=\"App\">\n        <FeedbackSection\n          increaseValue={this.increaseValue}\n          countTotalFeedback={this.countTotalFeedback}\n          countPositiveFeedbackPercentage={this.countPositiveFeedbackPercentage}\n          good={good}\n          neutral={neutral}\n          bad={bad}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnWrapper\":\"FeedbackOptions_btnWrapper__2ZN-0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__Ap5Zy\",\"title\":\"Section_title__2S6oE\"};"],"sourceRoot":""}